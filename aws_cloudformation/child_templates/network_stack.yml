
Description: AWS CloudFormation template to create the networking configurations necessary for the API to work

Parameters:
  Stage:
    Type: "String"
    Description: "Application Environment"
    AllowedValues: ["dev", "stg", "prd"]

Mappings:
  ResourceNames:
    AppPrefix:
      CamelCase: "bainMLEngineeringTest"
      SnakeCase: "bain_ml_engineering_test"
      PascalCase: "BainMLEngineeringTest"
      KebabCase: "bain-ml-engineering-test"

  StageName:
    dev:
      CamelCase: "Dev"
      UpperCase: "DEV"
    stg:
      CamelCase: "Stg"
      UpperCase: "STG"
    prd:
      CamelCase: "Prd"
      UpperCase: "PRD"

Resources:
  MainVPC:
    Type: AWS::EC2::VPC
    Properties:
      CidrBlock: 10.0.0.0/16
      EnableDnsSupport: true
      EnableDnsHostnames: true
      Tags:
        - Key: Name
          Value: MainVPC

  PrivateSubnet:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref MainVPC
      CidrBlock: 10.0.1.0/24
      AvailabilityZone: !Select [ 0, !GetAZs '' ]
      Tags:
        - Key: Name
          Value: PrivateSubnet

  PrivateRouteTable:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId: !Ref MainVPC
      Tags:
        - Key: Name
          Value: PrivateRouteTable

  PrivateSubnetRouteTableAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      SubnetId: !Ref PrivateSubnet
      RouteTableId: !Ref PrivateRouteTable

  DynamoVPCEndpoint:
    Type: AWS::EC2::VPCEndpoint
    Properties:
      VpcId: !Ref MainVPC
      ServiceName: !Sub com.amazonaws.${AWS::Region}.dynamodb
      VpcEndpointType: Gateway
      RouteTableIds:
        - !Ref PrivateRouteTable

  SageMakerVPCEndpoint:
    Type: AWS::EC2::VPCEndpoint
    Properties:
      VpcId: !Ref MainVPC
      ServiceName: !Sub com.amazonaws.${AWS::Region}.sagemaker.api
      VpcEndpointType: Interface
      SubnetIds:
        - !Ref PrivateSubnet
      SecurityGroupIds:
        - !Ref SageMakerEndpointSecurityGroup

  SageMakerEndpointSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      VpcId: !Ref MainVPC
      GroupDescription: Security group for SageMaker VPC Endpoint
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: 443
          ToPort: 443
          CidrIp: 10.0.0.0/16
      Tags:
        - Key: Name
          Value: SageMakerEndpointSG

Outputs:
  VPCId:
    Description: The ID of the VPC
    Value: !Ref MainVPC
  PrivateSubnetId:
    Description: The ID of the private subnet
    Value: !Ref PrivateSubnet
  DynamoVPCEndpointId:
    Description: The ID of the DynamoDB VPC endpoint
    Value: !Ref DynamoVPCEndpoint
  SageMakerVPCEndpointId:
    Description: The ID of the SageMaker VPC endpoint
    Value: !Ref SageMakerVPCEndpoint
  SageMakerEndpointSecurityGroupId:
    Description: The ID of the SageMaker endpoint security group
    Value: !Ref SageMakerEndpointSecurityGroup
